generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id                  String                @id @default(uuid())
  name                String                @unique
  discord             DiscordConnection?
  results             Result[]
  level               Int                   @default(0)
  xp                  Int                   @default(0)
  achievementProgress AchievementProgress[]
  achievements        UserAchievement[]
}

model DiscordConnection {
  id            String @id @default(uuid())
  access_token  String @unique
  expires_in    Int
  refresh_token String
  scope         String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  // @@unique([userId, access_token])
}

model Result {
  id        Int    @id @default(autoincrement())
  mode      Int
  condition Int
  wordIndex Int
  wpm       Int
  accuracy  Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String
}

model Daily {
  id        Int      @id @default(autoincrement())
  mode      Int
  condition Int
  seed      String
  createdAt DateTime @default(now())
}

model AchievementProgress {
  id              String   @id @default(uuid())
  userId          String
  achievementId   String
  currentProgress Int
  currentTier     Int?
  updatedAt       DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, achievementId])
  @@index([userId])
}

model UserAchievement {
  id            String   @id @default(uuid())
  userId        String
  achievementId String
  tier          Int?
  unlockedAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, achievementId, tier])
  @@index([userId])
}
